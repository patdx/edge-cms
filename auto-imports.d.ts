/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const Details: typeof import('./app/components/details')['Details']
  const ErrorPage: typeof import('./app/components/error-page')['ErrorPage']
  const For: typeof import('./app/components/for')['For']
  const IconMenu: typeof import('./app/components/icons')['IconMenu']
  const IconX: typeof import('./app/components/icons')['IconX']
  const Link: typeof import('@remix-run/react')['Link']
  const MonacoEditor: typeof import('./app/components/monaco-editor.client')['MonacoEditor']
  const Show: typeof import('./app/components/show')['Show']
  const StyledLink: typeof import('./app/components/styled-link')['StyledLink']
  const ViewEntity: typeof import('./app/components/view-entity')['ViewEntity']
  const clsx: typeof import('clsx')['default']
  const compactStringify: typeof import('./app/utils/compact-stringify')['compactStringify']
  const createHono: typeof import('./app/utils/create-hono')['createHono']
  const defineLoader: typeof import('@remix-run/cloudflare')['unstable_defineLoader']
  const flattenError: typeof import('./app/utils/wrap-server-query')['flattenError']
  const flattenJson: typeof import('./app/utils/flatten-json')['flattenJson']
  const formatSql: typeof import('./app/utils/format-sqlite')['formatSql']
  const honoClient: typeof import('./app/utils/hono-client')['honoClient']
  const useLoaderData: typeof import('@remix-run/react')['useLoaderData']
  const useMutation: typeof import('@tanstack/react-query')['useMutation']
  const useNavigate: typeof import('@remix-run/react')['useNavigate']
  const useParams: typeof import('@remix-run/react')['useParams']
  const useRevalidator: typeof import('@remix-run/react')['useRevalidator']
  const wrapServerQuery: typeof import('./app/utils/wrap-server-query')['wrapServerQuery']
  const z: typeof import('zod')['z']
  const zValidator: typeof import('@hono/zod-validator')['zValidator']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { AppLoadContext } from '@remix-run/cloudflare'
  import('@remix-run/cloudflare')
}
